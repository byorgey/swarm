name: Build
description: |
  Learn how to build robots to carry out simple tasks.
#
# Has to be easy, so that you do not have to debug it too much yet.
#
goal:
  - Now that you know basic commands, it is time to
    build robots to do the work for you.
  - You start in a base ('Ω') that does not move (at least not yet).
  - Let's start by building a gardener robot to perform a simple task.
  - You can build a robot with 'build {COMMANDS}',
    where instead of 'COMMANDS' you write the sequence
    of commands for the robot to execute (separated by ';').
  - Build a robot to grab the flower and place it next
    to the water.
  - |
    TIP: You can use the name of the flower ("pickerelweed")
    or the bind notation: 'f <- grab; ... ; place t;'.
entities:
  - name: pickerelweed
    display:
      attr: flower
      char: '*'
    description:
      - A small plant that grows near the water.
    properties: [known, portable, growable]
    # It would make sense for the plant to NOT grow away from water.
    # But if the player sent a robot that grabbed it and then did not
    # place it, another robot would need to salvage that robot.
  - name: knownwater
    display:
      attr: water
      char: '~'
    description:
    - An running stream of of water.
    properties: [known, portable, growable, liquid]
    growth: [0,0]
win: |
  try {
    teleport self (2,-1);
    ishere "pickerelweed";
  } { return false }
solution: |
  build {move; move; t <- grab; turn right; move; place t}
robots:
  - name: base
    loc: [0,0]
    dir: [1,0]
    display:
      char: Ω
      attr: robot
    devices:
      - logger
      - 3D printer
    inventory:
      - [10, logger]
      - [10, compass]
      - [10, solar panel]
      - [10, grabber]
      - [10, treads]
world:
  default: [blank, none]
  palette:
    '.': [grass]
    '~': [ice, knownwater]
    '*': [grass, pickerelweed]
    '┌': [stone, upper left corner]
    '┐': [stone, upper right corner]
    '└': [stone, lower left corner]
    '┘': [stone, lower right corner]
    '─': [stone, horizontal wall]
    '│': [stone, vertical wall]
  upperleft: [-1, 1]
  map: |
    ┌───┐
    │..*│
    │...│
    │~~~│
    └───┘
